1
00:00:02,220 --> 00:00:04,900
So let's work on the password validation.

2
00:00:04,960 --> 00:00:11,510
Now that password validation is special because the passwords should be equal.

3
00:00:11,530 --> 00:00:15,210
Now how can we check for equality.

4
00:00:15,330 --> 00:00:17,510
How does this work.

5
00:00:18,120 --> 00:00:19,880
Let's go down to validations.

6
00:00:19,890 --> 00:00:25,950
First of all and let's define a validator for the first password field or name and password.

7
00:00:26,190 --> 00:00:28,880
And I definitely want this to be required.

8
00:00:28,920 --> 00:00:32,560
Now I also want to ensure that it has a minimum length let's say.

9
00:00:32,730 --> 00:00:36,800
So let's import men lengthier.

10
00:00:37,200 --> 00:00:44,050
With that I can now add does mid-length validator and it works a lot like men value all name admin LAN.

11
00:00:44,340 --> 00:00:50,340
You could name admin length of course use the mid-length here and this all is a function where you need

12
00:00:50,340 --> 00:00:52,230
to pass the length.

13
00:00:52,240 --> 00:00:59,540
So here I want to say have at least six characters that also by the way is a requirement by firebase

14
00:00:59,540 --> 00:01:01,970
So this actually fits firebase.

15
00:01:01,970 --> 00:01:03,830
So now I've got the mid-length.

16
00:01:04,010 --> 00:01:10,930
This should make sure that we correctly validate the first input to find out if we do.

17
00:01:11,120 --> 00:01:14,960
Let's go to the input which wraps the first password.

18
00:01:15,230 --> 00:01:21,570
And let's add the class binding here to all to bind to a javascript object as we did before.

19
00:01:21,650 --> 00:01:30,130
And let's bind in valid here to dollar V password error as we did earlier.

20
00:01:30,290 --> 00:01:33,550
Now with that we also need to connect the password of course.

21
00:01:33,580 --> 00:01:42,290
So all at the blur event and bind does two dollar sign the password dollar sign touch as a function

22
00:01:42,290 --> 00:01:48,560
call with that if we go back to our application if I start typing here and click out of it it's marked

23
00:01:48,590 --> 00:01:54,920
as invalid as soon as I enter a valid password which is more or equal to six characters long.

24
00:01:54,920 --> 00:01:56,610
Now you see it's valid.

25
00:01:56,660 --> 00:01:57,740
Now that's great.

26
00:01:57,740 --> 00:02:01,520
But we want to make sure that it's actually equal to dispatch.

27
00:02:01,790 --> 00:02:06,850
Or to be precise that this second password is equal to the first one.

28
00:02:07,190 --> 00:02:15,350
So for that all go back to my four and all add a number validations group here confirm password which

29
00:02:15,350 --> 00:02:18,170
should refer to the second input there.

30
00:02:18,170 --> 00:02:24,050
We could also specify required and mid-length But this is not really necessary because if we say that

31
00:02:24,050 --> 00:02:30,650
the value has to be equal and we already required these validators on the first password they're implicitly

32
00:02:30,650 --> 00:02:32,240
all us human the second.

33
00:02:32,270 --> 00:02:34,240
So we don't we need to check this here.

34
00:02:34,580 --> 00:02:42,220
Instead I want to use a special built in validator which will also import which is called Same as.

35
00:02:42,410 --> 00:02:51,080
Now as you probably are able to guess same as allows us to check whether the value is equal to a different

36
00:02:51,080 --> 00:02:51,930
value.

37
00:02:51,990 --> 00:02:58,860
Now I want to add same as your on my confirmed password field so name it.

38
00:02:58,880 --> 00:02:59,910
Same as.

39
00:02:59,930 --> 00:03:05,810
But here actually I now need to call same as as a function.

40
00:03:05,870 --> 00:03:09,670
And now to this function you can pass two types of data.

41
00:03:09,950 --> 00:03:13,520
The first is a property name of your view instance.

42
00:03:13,520 --> 00:03:20,580
So we could pass password data to evaluate binding to with the model on the first password field.

43
00:03:20,930 --> 00:03:26,840
Let's start with that I can pass password and you have to make sure that you type it in exactly the

44
00:03:26,840 --> 00:03:30,720
same way as your property on your view in sensus named.

45
00:03:31,160 --> 00:03:39,290
Now let's find out if this works by simply going up to our forum and by adding our error binding here

46
00:03:39,320 --> 00:03:41,300
to the confirmed password group.

47
00:03:41,300 --> 00:03:44,000
We just need to update it to check for dollars.

48
00:03:44,030 --> 00:03:47,870
We confirm password if this has an error.

49
00:03:48,140 --> 00:03:52,440
And of course I will also connect it with blurred.

50
00:03:52,760 --> 00:03:54,900
So you're all touch.

51
00:03:54,950 --> 00:04:03,770
Confirm password let me know safeness if I go back to my application for enter a valid password in the

52
00:04:03,770 --> 00:04:09,800
first field and I click into the second and click out of it it's marked as invalid.

53
00:04:09,860 --> 00:04:11,020
So this looks good.

54
00:04:11,260 --> 00:04:15,170
I now enter exactly the same value as in the first field.

55
00:04:15,380 --> 00:04:18,410
It becomes valid for enter a wrong one.

56
00:04:18,410 --> 00:04:19,680
It's invalid again.

57
00:04:19,700 --> 00:04:28,290
So this is already working and this is how simple and easy you can add equality validations as I say

58
00:04:28,330 --> 00:04:33,010
it does only one option though I'll keep it around but comment it out.

59
00:04:33,050 --> 00:04:40,760
The second option is that you use same as but you don't pass the property name but you pass a function

60
00:04:40,760 --> 00:04:41,560
to it.

61
00:04:41,570 --> 00:04:45,940
This can be a normal function with the function keyword or an error or a function.

62
00:04:46,040 --> 00:04:52,680
Now does function receives one argument which is the view instance of this component.

63
00:04:52,760 --> 00:04:55,020
I'll name it V.M. here.

64
00:04:55,190 --> 00:05:03,270
Now in this function you can simply return the property you want to compare to devalue or confirm password.

65
00:05:03,350 --> 00:05:11,780
So you could access VM email here to reach out to does email property or of course you use password

66
00:05:11,870 --> 00:05:16,610
which probably makes more sense and therefore it is just a more we're both way of achieving what we

67
00:05:16,610 --> 00:05:17,630
already had.

68
00:05:17,750 --> 00:05:22,140
But this is especially useful if you don't just want to check against a certain value.

69
00:05:22,250 --> 00:05:28,220
But let's say you wanted to check whether it's the old password plus a B at the end which makes absolutely

70
00:05:28,220 --> 00:05:32,120
no sense here but which might make sense in some use cases.

71
00:05:32,120 --> 00:05:33,410
Let's see this in action.

72
00:05:33,530 --> 00:05:40,340
If I now go back to the form remember I have to add a B and at the end Fentress some password or something

73
00:05:40,330 --> 00:05:48,290
and to confirm password if I enter something that is equal it's still true that as wrong only if I had

74
00:05:48,350 --> 00:05:49,950
this be at the end.

75
00:05:50,060 --> 00:05:54,560
So the old value plus a B at the end it's treated as valid.

76
00:05:54,560 --> 00:05:59,690
Again this doesn't make a lot of sense here but I just want to show what you can do with disfunctions

77
00:05:59,750 --> 00:06:03,220
syntax if you just want to compare it against a value.

78
00:06:03,260 --> 00:06:10,920
This syntax here is shorter but this is how you can compare or how you can validate forms for equality.

79
00:06:10,970 --> 00:06:13,970
And of course that is something you all need a lot.


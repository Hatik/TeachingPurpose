1
00:00:02,160 --> 00:00:07,710
So we learn a lot about synchronous validating which means every keystroke immediately gives us back

2
00:00:07,710 --> 00:00:15,030
a result or if we use at blur every time we leave as input we immediately get back a result we don't

3
00:00:15,030 --> 00:00:20,820
need to run some async code we don't need to reach out to a server or do some operation which takes

4
00:00:20,820 --> 00:00:21,630
a bit longer.

5
00:00:21,630 --> 00:00:28,020
Now you do have these operations though and a good example is reaching out to a server to check whether

6
00:00:28,020 --> 00:00:35,640
an e-mail address is taken now to create this validator will actually walk through two different lectures

7
00:00:36,000 --> 00:00:43,020
and the first lecture will create our own validator which is super simple as you will learn thereafter

8
00:00:43,230 --> 00:00:48,030
we will learn how we can adjust this validator to run asynchronously.

9
00:00:48,030 --> 00:00:51,090
So let's start with the custom validator in this lecture.

10
00:00:51,360 --> 00:00:55,460
Let's say 40 e-mail address we want to check whether it's taken or not.

11
00:00:55,650 --> 00:01:01,110
And for that I'll create my own validator and you can of course add this validator for every control

12
00:01:01,140 --> 00:01:02,210
you want.

13
00:01:02,640 --> 00:01:05,530
For that I'll go to my e-mail validations rule here.

14
00:01:05,550 --> 00:01:11,680
This group of rules and now you can give as any name you want all name it unique.

15
00:01:12,030 --> 00:01:18,180
Now such a validator in its simplest form is just a function with the function keyword or arrow function

16
00:01:18,570 --> 00:01:24,510
which automatically receives the input value passed in by validate.

17
00:01:24,780 --> 00:01:30,510
And then you have to return true or false depending on whether you want to consider dis validation as

18
00:01:30,510 --> 00:01:32,490
successful or not.

19
00:01:32,490 --> 00:01:40,470
So for example if I return false here let's see what happens to the e-mail.

20
00:01:40,560 --> 00:01:43,280
They go up to my e-mail field.

21
00:01:43,680 --> 00:01:46,040
I can enter whatever I want.

22
00:01:46,080 --> 00:01:51,000
It's never becoming valid because my custom validator always returns false.

23
00:01:51,060 --> 00:01:51,450
So does.

24
00:01:51,450 --> 00:01:54,550
Always fails even if yabber one succeed.

25
00:01:54,570 --> 00:01:56,150
Does one always fails.

26
00:01:56,160 --> 00:01:58,290
That's of course not too useful.

27
00:01:58,590 --> 00:02:06,780
Let's say we want to treat any email address as valid as long as it isn't test test but can and will

28
00:02:06,780 --> 00:02:09,930
in the next lecture expand does to actually have a look at the server.

29
00:02:09,960 --> 00:02:12,220
Which e-mail address we may use.

30
00:02:12,300 --> 00:02:19,680
So here I will check if Velle is not equal to test at test dot com.

31
00:02:19,740 --> 00:02:24,300
So if it's not equal This will return true and therefore a validation passes.

32
00:02:24,300 --> 00:02:28,490
If it is equal this returns false and the laudation fails.

33
00:02:28,500 --> 00:02:36,390
So for back test to a test that can is good makes it through the validation for removed too though it

34
00:02:36,390 --> 00:02:37,240
fails.

35
00:02:37,440 --> 00:02:40,950
With that we get our own custom validator in the next lecture.

36
00:02:40,980 --> 00:02:44,010
We'll now turn this into an asynchronous one.


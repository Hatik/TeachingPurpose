1
00:00:03,050 --> 00:00:07,250
So in the last lecture we used a post to quest to store data.

2
00:00:07,250 --> 00:00:09,630
Now obviously we want to get back data.

3
00:00:09,830 --> 00:00:11,280
So let's go to the dashboard.

4
00:00:11,300 --> 00:00:18,890
Don't you file for example and let's say we want to load data when we wisit this file.

5
00:00:19,040 --> 00:00:25,610
So first of all I'll add a script section and they're all export the default javascript object our view

6
00:00:25,610 --> 00:00:26,840
component.

7
00:00:26,840 --> 00:00:31,320
And as I said I want to load something when we load this page.

8
00:00:31,460 --> 00:00:36,510
So I'll simply add the created method which is a lifecycle hook of view.

9
00:00:36,590 --> 00:00:40,290
Yes and now here I want to reach out to the Web.

10
00:00:40,700 --> 00:00:45,910
So for that I'll simply import X-ists from access here.

11
00:00:45,930 --> 00:00:51,170
You and Dad will be the same instance off axis as the sign up for.

12
00:00:51,170 --> 00:00:55,950
So we're not somehow increasing our bundles size by importing it here too.

13
00:00:56,390 --> 00:01:05,930
And then the created method I can simply run X years get and now get requires at least one argument

14
00:01:06,350 --> 00:01:08,740
that is due or else of course.

15
00:01:08,750 --> 00:01:14,940
So let's copy D you are Al Fromm the post request let's entrance here.

16
00:01:15,200 --> 00:01:18,530
You could pass a second argument where you configure this request.

17
00:01:18,710 --> 00:01:20,450
But for now let's simply change.

18
00:01:20,450 --> 00:01:21,660
Then again because.

19
00:01:21,680 --> 00:01:27,020
Get all the returns a promise and then then we will all get back the response.

20
00:01:27,140 --> 00:01:33,680
So here I will all the console lock the response and then will add a catch block where we could catch

21
00:01:33,680 --> 00:01:35,860
and handle any incoming errors.

22
00:01:36,170 --> 00:01:43,010
And of course you could now store the response in some field where you output it on The View.

23
00:01:43,040 --> 00:01:46,870
Now that is something I will do but for now let me just do it like this.

24
00:01:46,920 --> 00:01:49,530
We now save this file.

25
00:01:49,590 --> 00:01:56,100
Let's move over clear the console and move over to the dashboard and you see here after a fraction of

26
00:01:56,100 --> 00:02:03,440
a second because firebase is really quick here we all see such a response object as ex-U.S. gives it

27
00:02:03,450 --> 00:02:06,060
to us status code 200.

28
00:02:06,060 --> 00:02:10,590
Couple of pieces of information about hetero's have a request and then very interesting for us.

29
00:02:10,740 --> 00:02:16,860
The data object which is a javascript object where the key is this cryptic string and the value is the

30
00:02:16,860 --> 00:02:20,430
object we stored there with hobbies and so on.

31
00:02:20,430 --> 00:02:26,070
So this is how easy we can send a GET request as you see it really doesn't take that much it's super

32
00:02:26,080 --> 00:02:34,470
straightforward and it gives you a nice and easy to use way an alternative to sending HTP requests from

33
00:02:34,580 --> 00:02:35,780
the.

34
00:02:36,060 --> 00:02:42,930
Now let's actually see how we can work with the data we get back here before we then dive into the a

35
00:02:42,930 --> 00:02:50,460
little bit more advanced xes features like configuring requests intercepting requests and so on.


1
00:00:01,680 --> 00:00:08,370
I was speaking about having a way to access another instance from yet another instance.

2
00:00:08,630 --> 00:00:11,500
And we will have a look at this possibility now.

3
00:00:11,600 --> 00:00:14,920
Right now we always use new view like this.

4
00:00:14,930 --> 00:00:21,140
So we create a new Vue instance here and we don't store it in a variable it is so treated and it is

5
00:00:21,200 --> 00:00:29,570
managed for us is in this instance exists but it is not stored in a variable while we can do so though

6
00:00:29,870 --> 00:00:36,120
we can't stored in a variable and you will often see the variable name VM for view model sains view

7
00:00:36,130 --> 00:00:39,760
Chaske kind of represents the view model of your application.

8
00:00:39,950 --> 00:00:42,550
But you are free to choose any other name.

9
00:00:42,680 --> 00:00:44,970
So I'm going to name this VM one.

10
00:00:45,290 --> 00:00:49,740
And my second instance will be named we two with dad.

11
00:00:49,760 --> 00:00:55,730
I now got my instances stored in variables and I what I can do is I can in my second instance add a

12
00:00:55,730 --> 00:01:04,130
new pattern change something in view one in this first instance I will hook it up with the click listener

13
00:01:04,310 --> 00:01:06,240
on change for example.

14
00:01:06,260 --> 00:01:13,440
Choose any name you like and I'll quickly add it here to my methods property in this second instance.

15
00:01:13,670 --> 00:01:21,590
So onchange will be a function here and in this function I want to use a VM one remember dishonesty

16
00:01:21,610 --> 00:01:22,120
variable.

17
00:01:22,130 --> 00:01:27,060
Where we store the first instance and I want to change the title in the first instance.

18
00:01:27,110 --> 00:01:27,830
Let's try.

19
00:01:27,830 --> 00:01:28,330
We.

20
00:01:28,460 --> 00:01:33,680
Title equals changed like that.

21
00:01:33,680 --> 00:01:39,510
If I had control enter and I click here it is changed.

22
00:01:39,840 --> 00:01:43,790
So we are able to access one instance from a number.

23
00:01:43,830 --> 00:01:48,360
It's just what I mentioned before that if you do need just commit disconnection you might want to place

24
00:01:48,360 --> 00:01:53,790
it in the same instance in the first place but you are able to access your instance from outside.

25
00:01:54,120 --> 00:01:59,490
Obviously not just from a number of you instance all from normal javascript code like here or between

26
00:01:59,490 --> 00:02:00,760
the two instances.

27
00:02:00,790 --> 00:02:06,660
There's just a normal Chalis script code and here of course I could place a timeout where I offer free

28
00:02:06,690 --> 00:02:13,170
seconds exis My first instance whoops my function here first though.

29
00:02:13,710 --> 00:02:21,200
So where I can access my first instance access to title and set it to change by timer.

30
00:02:21,210 --> 00:02:29,630
Now if I had control enter and wait for seconds we see the alert going off due to us watching the title

31
00:02:29,900 --> 00:02:32,450
and it just changed by a timer.

32
00:02:32,450 --> 00:02:34,560
This is not just some hack.

33
00:02:34,580 --> 00:02:35,900
This is perfectly valid.

34
00:02:35,900 --> 00:02:38,070
You may use your instance like this.

35
00:02:38,150 --> 00:02:40,720
You may access it from outside.

36
00:02:40,740 --> 00:02:48,320
Notice that view to ask also proxies to properties we set up here in data and it does the same for our

37
00:02:48,320 --> 00:02:50,210
methods and computer properties.

38
00:02:50,480 --> 00:02:54,520
It peroxides them so that we can easily access them like this.

39
00:02:54,530 --> 00:02:56,500
We end one data title.

40
00:02:56,540 --> 00:03:02,510
Keep in mind technically VM one is our view instance and this instance may have whatever properties

41
00:03:02,510 --> 00:03:03,090
it has.

42
00:03:03,200 --> 00:03:10,580
It's not created by us it certainly by default has it hasn't our title property our title property is

43
00:03:10,580 --> 00:03:16,640
set up on this data object we pass on this object we pass to the future as constructor.

44
00:03:16,910 --> 00:03:23,030
So if you chastised as proxying for us automatically which makes it easier for us to access it from

45
00:03:23,030 --> 00:03:24,000
outside.

46
00:03:24,070 --> 00:03:27,160
I'll come back to this proxying in the next video.


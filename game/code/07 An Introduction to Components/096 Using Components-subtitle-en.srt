1
00:00:01,860 --> 00:00:03,710
So will learn a lot about components.

2
00:00:03,720 --> 00:00:10,960
We have deep data property which should be a function with the fact that we shall only have one root

3
00:00:11,200 --> 00:00:13,810
element in our component template.

4
00:00:14,050 --> 00:00:21,160
And one of the well methods of registering our component globally like this and locally with the components

5
00:00:21,160 --> 00:00:24,280
property I want to do this here now too.

6
00:00:24,430 --> 00:00:29,060
And when I connect our components with some other things we learned earlier.

7
00:00:29,590 --> 00:00:32,370
Let me create a new view file here.

8
00:00:32,510 --> 00:00:38,220
I'll name it server status don't you.

9
00:00:38,250 --> 00:00:40,990
This is kind of the file naming convention we currently use.

10
00:00:40,990 --> 00:00:50,110
By the way you gave your view components does naming where you start with a capital character and then

11
00:00:50,110 --> 00:00:58,780
you have welder's casing where each Suppe word in your title in your name also begins with a capital

12
00:00:58,810 --> 00:01:00,730
character like status here.

13
00:01:01,090 --> 00:01:04,040
This will read or a service status component.

14
00:01:04,040 --> 00:01:10,420
Of course this file name is totally irrelevant for de-select or you choose to use in the end because

15
00:01:10,420 --> 00:01:17,050
you set up the selectors like this in the view component method or as a string and the components property

16
00:01:17,050 --> 00:01:19,270
for local components anyways.

17
00:01:19,570 --> 00:01:26,410
So any service status component or copy my code from the home component and here I basically want to

18
00:01:26,410 --> 00:01:33,400
use the exact same status so or in the same set up I have my template where I have to serve a status

19
00:01:33,400 --> 00:01:35,160
which I can change with a button.

20
00:01:35,380 --> 00:01:40,380
But now let's imagine our application manages to stay out of several service.

21
00:01:40,470 --> 00:01:44,610
And so we want to be able to track the state of each server and change it.

22
00:01:44,950 --> 00:01:48,960
So the home component will no longer output the server status.

23
00:01:49,000 --> 00:01:56,080
I will no longer manage data here and said Here I will only want to loop through all my servers I got

24
00:01:56,670 --> 00:02:03,040
and for this I need a for loop but I also need to have access to the service status component.

25
00:02:03,040 --> 00:02:08,660
Now I could register a service status globally but here I want to do this locally.

26
00:02:08,710 --> 00:02:17,880
So at the components method and here I set up a key as a string and I'll name it app server status.

27
00:02:18,040 --> 00:02:25,180
Therefore I will rename my global components year so that I don't get problems which I will simply name

28
00:02:25,270 --> 00:02:34,090
app servers also just app servers here in the template of course to use this new selector we set up

29
00:02:34,090 --> 00:02:39,690
here globally and then the home component of maloka apps restate as selector.

30
00:02:39,940 --> 00:02:47,870
And I want to refer to the component in the server status that the file well for this I need to imported

31
00:02:47,890 --> 00:02:50,990
here in this script TAC which of course is possible here too.

32
00:02:51,010 --> 00:02:58,240
That's normal javascript code and it can use this import syntax since we're using ESX since our project

33
00:02:58,270 --> 00:03:04,610
will compile to IIS 5 and allows us to use features like this which is very handy to split up the file

34
00:03:04,610 --> 00:03:06,980
or project over multiple files.

35
00:03:07,300 --> 00:03:13,050
So here I will do an import server status and the name here is totally up to you.

36
00:03:13,060 --> 00:03:19,220
Again we don't apply a name here when we export just a default but it makes sense to use the file name

37
00:03:19,240 --> 00:03:25,670
so that you easily see where this is coming from from and then it is from slash service status that

38
00:03:25,730 --> 00:03:27,490
view file.

39
00:03:27,520 --> 00:03:33,550
Now here I simply assign the object we are importing from there Tudor's selector and therefore I can

40
00:03:33,550 --> 00:03:38,370
now use app server status in my template.

41
00:03:38,620 --> 00:03:43,690
But as I said I want to loop through this and have multiple servers no problem.

42
00:03:43,690 --> 00:03:55,030
I can use the four and simply loop through it by saying server in 5 to loop from 0 to 5.

43
00:03:55,030 --> 00:04:00,310
If you remember this but with this set up we would get an error because even though we only have one

44
00:04:00,310 --> 00:04:02,060
element here our code.

45
00:04:02,170 --> 00:04:04,520
This will result in five elements in the end.

46
00:04:04,540 --> 00:04:07,780
So we would have again more than one root element.

47
00:04:07,990 --> 00:04:13,190
So again Rapidan unsighted if you have valid code here.

48
00:04:13,690 --> 00:04:21,190
And with that if you hit Control s and save this it should recompile and once it is reloads here you

49
00:04:21,190 --> 00:04:26,140
should see all these servers as a side note if you have problems with reloading.

50
00:04:26,230 --> 00:04:30,890
Always feel free to cancel this process with Control-C and rerun NPM run.

51
00:04:30,890 --> 00:04:35,470
Def snubby got all our service which you can switch manually.

52
00:04:35,650 --> 00:04:45,800
And now we're using both the global the app servers home component and a local component here.

53
00:04:46,420 --> 00:04:53,830
And with that you saw how you can use them to get them in single files if there's a single file set

54
00:04:53,830 --> 00:04:54,120
up.

55
00:04:54,160 --> 00:04:55,430
Important here.

56
00:04:55,510 --> 00:04:58,340
Keep in mind you have to have one root element.

57
00:04:58,630 --> 00:05:03,910
You also saw how to export them with export default and import them and Obert files.

58
00:05:03,910 --> 00:05:10,920
Do you trust using ESX which is required for this whole multi file setup and you saw how to register

59
00:05:10,920 --> 00:05:13,050
them both globally and locally.

60
00:05:13,240 --> 00:05:20,950
You also saw how to use them with before because you can use your newly created components like normal

61
00:05:20,950 --> 00:05:22,330
age email text.

62
00:05:22,420 --> 00:05:27,400
You can use them with before with we if all the things we learned.

63
00:05:27,480 --> 00:05:30,720
And with that I'd say it's time to practice this.


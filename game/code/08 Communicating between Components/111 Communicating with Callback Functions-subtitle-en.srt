1
00:00:01,800 --> 00:00:04,610
So right now in the application we didn't have this case.

2
00:00:04,650 --> 00:00:08,060
We only had to communication between a parent and a child.

3
00:00:08,310 --> 00:00:13,650
And we use props to get data from the parent to the child and it has to be meant to do the other way

4
00:00:13,650 --> 00:00:14,410
around.

5
00:00:14,700 --> 00:00:21,480
The thing about the Colbeck I mentioned on the slides is a number option we have though here.

6
00:00:21,600 --> 00:00:24,200
I could also set reset name.

7
00:00:24,210 --> 00:00:25,940
Now I'm on the parent component.

8
00:00:25,980 --> 00:00:31,260
So add a new method here where I set this name equal to Max again.

9
00:00:31,350 --> 00:00:34,740
So it's the same reset name method as the child component.

10
00:00:34,740 --> 00:00:45,570
But now the parent I could now also pass Nabat prop to my component and I'll do this here.

11
00:00:47,410 --> 00:00:57,790
So I could pass a prop let's say reset function which is a pointer tudy reset named function I just

12
00:00:57,790 --> 00:01:00,170
created this one here.

13
00:01:00,370 --> 00:01:01,900
So now I'm passing this.

14
00:01:01,900 --> 00:01:12,570
I therefore have to set up a new prop in my user detail and here I would have the reset function which

15
00:01:12,570 --> 00:01:14,920
is a functional type function here.

16
00:01:16,370 --> 00:01:20,240
And then I could simply duplicate the reset name button here.

17
00:01:20,360 --> 00:01:25,090
But in the second one I'm not executing my own reset name function.

18
00:01:25,250 --> 00:01:29,790
I'm instead executing the reset function which was passed down as a prop.

19
00:01:29,810 --> 00:01:34,780
So that's just now set up to avoid working with a cast that we went which you don't have to there's

20
00:01:34,790 --> 00:01:36,400
nothing wrong with a custom event.

21
00:01:36,470 --> 00:01:39,690
It's just an alternative using such a callback.

22
00:01:40,070 --> 00:01:44,080
If I reload now you will see this now will also reset it.

23
00:01:44,210 --> 00:01:46,460
But without using a custom event.

24
00:01:46,610 --> 00:01:52,060
So that's one addition on how to communicate between parent and child.

25
00:01:52,070 --> 00:02:00,290
You can do it with props and custom U-bend or with props and passing a callback as a prop which actually

26
00:02:00,290 --> 00:02:02,040
executes a method in the parent.

27
00:02:02,150 --> 00:02:06,980
But now by passing it as a prop makes it executable from the child.

28
00:02:06,980 --> 00:02:13,490
This is important thing to understand how to work with that and how you well pass data from parent to

29
00:02:13,490 --> 00:02:14,290
child.

30
00:02:14,390 --> 00:02:19,770
But we haven't touched on the case to be want to get some data from one child to an average child.

31
00:02:19,820 --> 00:02:21,320
We'll have a look at this next.


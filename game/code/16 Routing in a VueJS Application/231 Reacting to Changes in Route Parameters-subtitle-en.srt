1
00:00:02,530 --> 00:00:05,900
Will learn how to send and use parameterless.

2
00:00:05,950 --> 00:00:11,710
But let me now show a problem we do have with this in order to be able to show the problem.

3
00:00:11,710 --> 00:00:19,480
I will adjust my header here to duplicate as you only to have user 1 and 2 and therefore load users

4
00:00:19,480 --> 00:00:20,640
one into here.

5
00:00:20,800 --> 00:00:24,460
So a very simple change with two different IDs being passed now.

6
00:00:24,460 --> 00:00:30,190
Now of that if I go to the application reloaded and Figler click on user 1 we load user one and click

7
00:00:30,190 --> 00:00:32,180
on user to reload user too.

8
00:00:32,200 --> 00:00:34,730
But do you see that the idea is not updated.

9
00:00:34,780 --> 00:00:41,410
The idea remains and one the reason for this is that this component where we use that user not view

10
00:00:41,410 --> 00:00:45,010
file the user component here isn't recreated.

11
00:00:45,070 --> 00:00:51,640
If we are already on that component and then only the path changes but we would load the same component

12
00:00:51,640 --> 00:00:54,940
again viewed as will not recreate the component.

13
00:00:54,970 --> 00:01:00,200
It will save these resources and well simply keep the existing component.

14
00:01:00,280 --> 00:01:01,540
That of course is an issue.

15
00:01:01,570 --> 00:01:07,540
If some pieces on this component have to change like the idea here they are for we have to watch for

16
00:01:07,540 --> 00:01:09,570
these router parents to change.

17
00:01:09,670 --> 00:01:16,480
And if they change we want to update the pieces on our page which need to be updated depending on our

18
00:01:16,480 --> 00:01:17,520
parameters.

19
00:01:17,800 --> 00:01:25,740
Well for this we can use something we learned about a long time ago and of course which we can set up

20
00:01:25,770 --> 00:01:31,470
a watcher and we can watch our route like this dollar sign route.

21
00:01:31,720 --> 00:01:37,630
Now do you find that whatever dollar sign route changes and keep in mind the route does change.

22
00:01:37,770 --> 00:01:43,680
It's only that idea is not updated here because there's no computer or dynamic component.

23
00:01:43,860 --> 00:01:51,200
But here we can watch for our changes and then execute any code we want to execute whenever this occurs.

24
00:01:51,390 --> 00:01:58,260
So here this actually is a function and we will get two arguments passed to dysfunction by the router

25
00:01:58,290 --> 00:01:59,370
to and from.

26
00:01:59,370 --> 00:02:00,810
So where it coming from.

27
00:02:00,810 --> 00:02:04,260
Which route are we coming from and to which route are we going.

28
00:02:04,380 --> 00:02:10,980
Well of course it's the same route but there is one important thing we do have our new parents stored

29
00:02:11,040 --> 00:02:12,250
on the tube route.

30
00:02:12,270 --> 00:02:14,240
This new route which is getting loaded.

31
00:02:14,400 --> 00:02:22,720
So here I can simply said this ID equal to two parents Id remember to just is a.

32
00:02:22,740 --> 00:02:29,210
So not this assigned route just to this will be the new route which gets loaded.

33
00:02:29,340 --> 00:02:36,980
And if I do it like this and I reload the page here now you see the ID is adjusted when I switch to

34
00:02:36,990 --> 00:02:39,710
page because now I'm watching for changes.

35
00:02:39,780 --> 00:02:45,060
And of course you could execute more code here which is why didn't you choose a computer property here

36
00:02:45,240 --> 00:02:50,810
which of course should also work if you use this as an roud parents ID.

37
00:02:51,270 --> 00:02:56,820
And with that we're now reacting to that and now we're really using the route parameters we're passing

38
00:02:56,820 --> 00:03:02,550
here to create a reactive application and using the data we're sending fruity you are el.


1
00:00:01,980 --> 00:00:05,090
We do have this button in the head.

2
00:00:05,110 --> 00:00:12,170
So here we get the save button and we can of course add a click listener here to calls save data in

3
00:00:12,180 --> 00:00:16,030
this place and then add the appropriate method down there.

4
00:00:16,080 --> 00:00:18,610
Save data like this.

5
00:00:18,660 --> 00:00:20,480
Now do we save data.

6
00:00:20,880 --> 00:00:26,130
Well generally we can now execute all the logic here.

7
00:00:26,130 --> 00:00:31,930
We could also create the action and a mutation in view X but we're not really mutating the states.

8
00:00:31,950 --> 00:00:33,360
That doesn't sound right.

9
00:00:33,360 --> 00:00:36,610
Why call it a mutation if it doesn't change anything.

10
00:00:36,690 --> 00:00:39,310
That's not how we want to use view X..

11
00:00:39,370 --> 00:00:47,190
Instead I can basically store my data in a constant here and create an object which has all the data

12
00:00:47,220 --> 00:00:54,930
I need which would be my funds my stock portfolio and my overall stocks.

13
00:00:54,930 --> 00:00:57,760
So this is the these are the free data pieces I have.

14
00:00:57,780 --> 00:01:00,000
Including the current prices of course.

15
00:01:00,120 --> 00:01:06,180
So after hitting and they Several times we of course want to store the recent state and then I can simply

16
00:01:06,180 --> 00:01:15,960
get all the stator from this store gathers funds and of course it could use map getters instead here

17
00:01:16,020 --> 00:01:23,700
it's run getters stock portfolio and down there it's from stocks.

18
00:01:23,740 --> 00:01:26,650
So I'm getting all the data from my store.

19
00:01:26,820 --> 00:01:30,760
Now I'm storing it in this data constant I create.

20
00:01:31,020 --> 00:01:37,350
And I can now pass this constant so I will use HTP of Bawler assign age to be accessing the resource

21
00:01:37,350 --> 00:01:43,800
here and I will send a request because remember on firebase using put requests will override the old

22
00:01:43,800 --> 00:01:44,160
data.

23
00:01:44,190 --> 00:01:45,450
And that's exactly what I want.

24
00:01:45,450 --> 00:01:47,810
I only want to keep one record.

25
00:01:48,540 --> 00:01:50,300
I want to put two data.

26
00:01:50,370 --> 00:01:55,340
Jason that's the name of the node and wanted to create of course you can choose any name you want but

27
00:01:55,390 --> 00:01:57,020
dot Jason is important.

28
00:01:57,030 --> 00:01:58,660
Our vices will not work.

29
00:01:59,130 --> 00:02:02,780
And then I will send data as an argument like this.

30
00:02:03,620 --> 00:02:05,520
Well let's try this out.

31
00:02:05,690 --> 00:02:13,490
If I go back to my application and hit save data we see a data node was created in firebase with funds

32
00:02:13,520 --> 00:02:16,860
and stocks no portfolio because we don't have a portfolio.

33
00:02:17,030 --> 00:02:24,330
So let's quickly add some items to the portfolio you hit and day and now save it.

34
00:02:24,450 --> 00:02:30,090
Now you see it was over written the funds were updated to stock portfolio looks good with ID.

35
00:02:30,090 --> 00:02:31,290
BMW.

36
00:02:31,290 --> 00:02:35,190
The prices on the stocks also look all right.

37
00:02:35,190 --> 00:02:37,930
So this works as intended.

38
00:02:38,010 --> 00:02:45,080
We're now correctly storing the data on our firebase service and I think it was pretty easy to be honest.

39
00:02:45,180 --> 00:02:46,860
Not that many steps.

40
00:02:47,070 --> 00:02:49,050
No let's hook up that load that into.


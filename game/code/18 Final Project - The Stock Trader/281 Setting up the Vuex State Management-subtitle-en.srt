1
00:00:01,670 --> 00:00:10,990
Time to unlock the next feature of our app by adding new acts to it in terminal here all open and you

2
00:00:11,010 --> 00:00:19,430
tiap and then I need to install as a development as a production dependency view x NPM install save

3
00:00:19,550 --> 00:00:27,470
view x that will pull it down as well or and it does now gives me access to X of course with that set

4
00:00:27,470 --> 00:00:32,610
up I'll add a new folder to my source folder I'll name it store.

5
00:00:32,930 --> 00:00:36,080
And in this folder I'll create my stored at chess file.

6
00:00:36,110 --> 00:00:40,760
That's what each you x set up basically starts with there.

7
00:00:40,820 --> 00:00:49,580
I need to import you from you and I also of course need to import you x from you x so that we get access

8
00:00:49,580 --> 00:00:51,250
to these two packages.

9
00:00:51,260 --> 00:00:58,880
Thereafter it's time to use the x in our view application and then we can start setting up our new store.

10
00:00:58,910 --> 00:01:00,880
We want to export this.

11
00:01:01,100 --> 00:01:08,690
So this new US store with the capital last year and this gets an argument where we configure a store.

12
00:01:08,720 --> 00:01:15,970
Now as we learned what does a store have it has a state action scepters mutations and so on.

13
00:01:15,980 --> 00:01:23,150
Now regarding the state I will create two modules and if you set up one for the portfolio and one for

14
00:01:23,150 --> 00:01:24,470
my stocks.

15
00:01:24,470 --> 00:01:27,130
Each of these modules will have its own state.

16
00:01:27,200 --> 00:01:33,440
I actually don't have anything in my global stage here because I want to map the stocks which are available

17
00:01:33,500 --> 00:01:39,160
to the stocks module I'm going to create and the funds for example will belong to my portfolio.

18
00:01:39,350 --> 00:01:40,940
So this is what I'll work with.

19
00:01:40,940 --> 00:01:43,850
Of course you may choose a different setup but for dad.

20
00:01:43,910 --> 00:01:52,520
Create a new folder named modules now in modules all have stocks that just fall later also had a portfolio

21
00:01:52,520 --> 00:01:55,790
that shares fall but let's start with stocks.

22
00:01:55,790 --> 00:02:01,970
So in there I want to treat my new state which is an object where I basically have an array of stocks

23
00:02:02,060 --> 00:02:04,550
just like this.

24
00:02:04,670 --> 00:02:07,810
Now how do we want to manage just stayed.

25
00:02:07,880 --> 00:02:08,860
What do we need.

26
00:02:08,960 --> 00:02:14,980
Let's start with mutations to understand how we possibly could change our stocks.

27
00:02:15,110 --> 00:02:21,770
The first mutation which comes to my mind is that we want to set our stocks because let's think about

28
00:02:21,770 --> 00:02:22,090
it.

29
00:02:22,400 --> 00:02:24,180
Our stocks here.

30
00:02:24,290 --> 00:02:26,270
How do they ever change.

31
00:02:26,330 --> 00:02:33,940
Well they need to be set ever because we loaded them from our server or because we loaded the app and

32
00:02:34,040 --> 00:02:35,240
need to be randomized.

33
00:02:35,270 --> 00:02:41,650
When we click and they want to recalculate prices so there are cute mutations which come to my mind.

34
00:02:41,990 --> 00:02:48,020
And now regarding the naming of these mutations I'll give them a name which deviates from the one I

35
00:02:48,020 --> 00:02:49,930
chose in the last module.

36
00:02:50,030 --> 00:02:56,330
I'll take kind of this middle way between using the name spaces and the Constans which is a very complicated

37
00:02:56,330 --> 00:02:59,800
set up and giving them no names.

38
00:02:59,930 --> 00:03:07,490
I'll use a string as a name where I say stem cell stocks mainly also because of this if you use TVU

39
00:03:07,550 --> 00:03:14,060
developer tools allows you to easier identify your mutations.

40
00:03:14,090 --> 00:03:21,020
So this set stocks here is a method of course where we get to this state and we know we'll all get the

41
00:03:21,020 --> 00:03:26,160
stocks because we want to make sure that we pass the stocks as a payload to this mutation.

42
00:03:26,210 --> 00:03:31,700
Therefore here we can say state stocks ecord stocks because you know we get news stocks passed as an

43
00:03:31,700 --> 00:03:37,010
argument and we want to edit our existing state by overwriting the stocks there.

44
00:03:37,010 --> 00:03:41,000
Now we'll also have random stocks mutation.

45
00:03:41,000 --> 00:03:43,540
Let's say where we get the existing state.

46
00:03:43,550 --> 00:03:48,990
No payload but there we want to randomize our stock data when we end the day.

47
00:03:49,010 --> 00:03:51,720
I'll work on this later for now.

48
00:03:51,740 --> 00:03:54,680
Let's start by setting up some actions here.

49
00:03:54,680 --> 00:03:58,300
Now regarding the actions which actions do we need.

50
00:03:58,550 --> 00:04:03,780
Well I want to be able to buy a stock here I'll use a normal function.

51
00:04:03,860 --> 00:04:07,960
You may of course again name these things as you want to name them.

52
00:04:07,970 --> 00:04:12,340
I'm going to use a normal name here and buy stock.

53
00:04:12,600 --> 00:04:19,520
Now of course also a method where we get these context Optik where we only need to commit function so

54
00:04:19,520 --> 00:04:25,170
I'm going to use destructuring to pull out just commed function of this context object.

55
00:04:25,490 --> 00:04:27,080
And then the order.

56
00:04:27,320 --> 00:04:34,880
So this is this set up here and that of course needs a colon in between like this.

57
00:04:35,210 --> 00:04:42,590
So now it allows me to buy a stock and in buy stock I own I now want to commit a certain mutation but

58
00:04:42,590 --> 00:04:44,900
none of the mutations we have and this fall.

59
00:04:44,900 --> 00:04:49,040
Instead one of the portfolio fall which is set up in one of the next videos.

60
00:04:49,100 --> 00:04:50,740
So leave it as empty for now.

61
00:04:50,930 --> 00:04:52,740
Continue working on this.

62
00:04:52,910 --> 00:05:01,550
We'll also have set stocks here which only takes the commit pulled out of this context object and there

63
00:05:01,640 --> 00:05:10,270
I'd then want to run commit on set stocks and then we also need to pass some data here.

64
00:05:10,460 --> 00:05:13,540
Now which data is that and where do we get it from.

65
00:05:13,820 --> 00:05:18,750
Well right now we have our stocks in those stocks that you file here.

66
00:05:19,100 --> 00:05:21,650
Well that's not really the ideal place.

67
00:05:21,650 --> 00:05:25,530
Now you could get them from a server in the Internet.

68
00:05:25,610 --> 00:05:31,430
I'm going to set up some dummy data source here in my project so I'll create a new folder named data

69
00:05:32,060 --> 00:05:38,750
and in there aliquid and you fall name stocks start J.S. where I simply want to export a default object

70
00:05:38,810 --> 00:05:44,510
where DiVall area I should say and this array of course is where holds these items.

71
00:05:44,510 --> 00:05:48,300
I set up here so I'm going to copy them in there.

72
00:05:48,410 --> 00:05:49,730
So these are my stocks.

73
00:05:49,730 --> 00:05:54,900
No it is stocks Chia's file and that could of course be an external data source.

74
00:05:54,920 --> 00:06:00,790
It just happens to be not an external source it this project here.

75
00:06:00,920 --> 00:06:07,610
And then with that set up I can add an import in my stocks Jr's module your import

76
00:06:09,810 --> 00:06:11,370
stocks from.

77
00:06:11,370 --> 00:06:19,230
And now we have to go up a level and then to the and then one level more and then to the data folder

78
00:06:19,350 --> 00:06:25,050
and that here these stocks file and these are the stocks from this data stocks file.

79
00:06:25,050 --> 00:06:30,360
I want a pet pass here because these are the stocks with which I want to initialize my application or

80
00:06:30,360 --> 00:06:31,830
initialize my stocks.

81
00:06:31,830 --> 00:06:37,140
There probably could also named this in it stocks maybe maybe it makes much more sense because we only

82
00:06:37,140 --> 00:06:44,400
call it once we initialize our stocks with all the action to randomize our stocks so I can already set

83
00:06:44,400 --> 00:06:46,850
this up randomise stocks.

84
00:06:47,040 --> 00:06:56,320
And here again I will only need my commit function here and then with that commed function.

85
00:06:56,630 --> 00:07:04,280
Outside of the parentheses though with that function here I want to commit random stocks with no data

86
00:07:04,310 --> 00:07:05,810
because it does need data.

87
00:07:05,810 --> 00:07:11,130
And again I'll come back to writing the logic for randomizing the stocks in one of the next videos.

88
00:07:11,510 --> 00:07:15,730
Well finally it's time to set up some getters because we also want to see our data right.

89
00:07:15,800 --> 00:07:18,800
So the getters we need you may choose any names you want.

90
00:07:18,800 --> 00:07:19,790
I'm going to name it.

91
00:07:19,790 --> 00:07:24,170
Stocks here and the state is the argument.

92
00:07:24,170 --> 00:07:30,620
We do get in such a Geter as you learn it and with a state I can simply return state stocks of course

93
00:07:30,620 --> 00:07:34,390
referring to the stocks that I set up up here in my state.

94
00:07:34,730 --> 00:07:42,770
Well and with that it's time to export that all in one object so export it in a javascript object and

95
00:07:42,770 --> 00:07:44,410
in this object we do have our state.

96
00:07:44,420 --> 00:07:46,580
We do have our mutations.

97
00:07:46,580 --> 00:07:55,400
We do have our actions and our getters of course not like this getters and with dead set up I can get

98
00:07:55,400 --> 00:07:57,960
no back to my main store file.

99
00:07:58,020 --> 00:08:00,670
And here I want to import this module.

100
00:08:00,670 --> 00:08:08,740
So let me add the import stocks from and now from the modules folder and then these stocks Shiahs file

101
00:08:09,040 --> 00:08:16,190
and that in this store we set up here I simply add modules and add my stocks Marchal it's the only module

102
00:08:16,190 --> 00:08:19,920
right now but it has everything to get this story started.

103
00:08:19,940 --> 00:08:25,970
And with that the final step of course is to add this story to our main file.

104
00:08:26,000 --> 00:08:27,630
So here we want to import it.

105
00:08:27,650 --> 00:08:37,250
We want to import store from this store folder and then the storage areas file and after importing it

106
00:08:37,250 --> 00:08:40,050
we can simply add with the shortcut to our view.

107
00:08:40,070 --> 00:08:41,480
Instance here.

108
00:08:41,810 --> 00:08:48,420
Now with this in place we see our app is broken because we never call it stocks.

109
00:08:48,440 --> 00:08:50,810
We never initialize our app.

110
00:08:50,810 --> 00:08:54,700
So let's make sure we do that and go places in the app view file.

111
00:08:54,710 --> 00:09:04,310
And here in it's created Meffert because that has been our root instance here is finished initialising.

112
00:09:04,430 --> 00:09:08,240
So here I want to call this dollar sign store.

113
00:09:08,240 --> 00:09:13,310
I do have access to the stores since I've set it up in the main js file here.

114
00:09:13,550 --> 00:09:15,560
Cent Store dispatch.

115
00:09:15,740 --> 00:09:20,060
And then let's see we named our action here in this module.

116
00:09:20,210 --> 00:09:22,850
In it stocks this name here.

117
00:09:22,850 --> 00:09:25,710
So this is what all this patch as a string.

118
00:09:26,000 --> 00:09:30,230
And after doing so we can go to the stocks you fall in here of course.

119
00:09:30,230 --> 00:09:33,480
We now need a stock's aere to loop.

120
00:09:33,770 --> 00:09:35,700
And we can use our getter for that.

121
00:09:35,720 --> 00:09:45,220
So we can add the computed method here to now get our get or a year and it could set up map getters.

122
00:09:45,380 --> 00:09:48,520
But since I only have one getter I'm interested in.

123
00:09:48,620 --> 00:09:59,080
I can also simply name it stocks and here I will return this store gatherer's stocks like this that

124
00:09:59,090 --> 00:10:02,060
in place if I saved us and go back.

125
00:10:02,060 --> 00:10:09,410
We see our stocks again but now managed for our essential Buick's which just finished but we achieved

126
00:10:09,410 --> 00:10:10,750
quite a lot there.

127
00:10:11,000 --> 00:10:17,090
And in the next with you it's all about setting up the portfolio state managing the portfolio and making

128
00:10:17,090 --> 00:10:18,400
these buy buttons work.


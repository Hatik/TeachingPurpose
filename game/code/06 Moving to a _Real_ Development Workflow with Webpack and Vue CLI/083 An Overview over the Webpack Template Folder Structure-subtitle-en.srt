1
00:00:02,090 --> 00:00:07,280
So I open up the project but just create it in website form which is the idea I'm using as mentioned

2
00:00:07,280 --> 00:00:11,420
earlier and of course feel free to use any idea or editor you want to use.

3
00:00:11,810 --> 00:00:16,670
And then we have these very basic simple well folder structure here.

4
00:00:16,800 --> 00:00:19,480
The most important folder for us will be the source folder.

5
00:00:19,490 --> 00:00:23,180
This is where we write our source code or view Chaske code.

6
00:00:23,180 --> 00:00:25,710
And it's See we already got a couple of files here.

7
00:00:25,720 --> 00:00:28,130
Will come back to these files in a second.

8
00:00:28,550 --> 00:00:30,970
First I want to quickly guide you through the other files.

9
00:00:31,130 --> 00:00:37,250
Well babbel here displayable can conflict for basically sets up table which is a trans piler allowing

10
00:00:37,250 --> 00:00:38,950
us to write E.S. 6 code.

11
00:00:38,990 --> 00:00:42,030
So this next work of javascript today.

12
00:00:42,050 --> 00:00:47,840
And then there's Prince piler will transport to erase five codes that were able to run in any browser

13
00:00:48,020 --> 00:00:51,960
and not just in the latest browsers which already support iOS 6 features.

14
00:00:52,100 --> 00:00:55,110
That's very handy because we want to use iOS 6 syntax.

15
00:00:55,190 --> 00:00:57,010
It gives us some shortcuts.

16
00:00:57,010 --> 00:00:57,850
It's a nice feature.

17
00:00:57,860 --> 00:01:03,730
We definitely want to enjoy and use well get ignored is just for the good working control system.

18
00:01:03,860 --> 00:01:08,390
The index HDMI file is the file which actually gets served.

19
00:01:08,390 --> 00:01:10,650
So this is what we're viewing here.

20
00:01:10,670 --> 00:01:17,950
In the end but of course since this is a view chess application this file is edited by View chess.

21
00:01:17,960 --> 00:01:20,250
It's basically DHV mouth section.

22
00:01:20,270 --> 00:01:23,090
We were editing and Chia's fiddle in the videos.

23
00:01:23,300 --> 00:01:29,450
And therefore it looks very well related to these videos just that we have a full hd a mouthful here

24
00:01:29,450 --> 00:01:30,520
with a head too.

25
00:01:30,650 --> 00:01:36,470
But then in the body we got our div with the ID app and then we get this script import here which clearly

26
00:01:36,470 --> 00:01:39,860
imports our belt the U.K.'s application.

27
00:01:39,860 --> 00:01:46,340
Now I'm saying belt because unlike in case the law we're not writing our beauteous code and it gets

28
00:01:46,340 --> 00:01:47,830
executed instantly.

29
00:01:47,900 --> 00:01:51,400
Instead here we're using well-packed to build our files.

30
00:01:51,410 --> 00:01:57,010
Now what needs to be built now for example if we use ESX send text that's needs to be transported is

31
00:01:57,020 --> 00:01:57,720
5.

32
00:01:57,980 --> 00:01:59,520
So web pick will do that.

33
00:01:59,540 --> 00:02:01,070
It will also be a couple of other things.

34
00:02:01,070 --> 00:02:07,040
I'll come back to this and will give us output which lives in the dist folder and then in a bundled

35
00:02:07,100 --> 00:02:14,420
build chess file bundled also means that we're able to split up or Mujeres over multiple files or just

36
00:02:14,420 --> 00:02:17,840
code over multiple files and it will be bundled into one file.

37
00:02:17,870 --> 00:02:24,180
In the end this makes for a greater development experience while serving one fall in the end too.

38
00:02:24,320 --> 00:02:30,620
Now you won't see the disk folder here because in development mode all of this is created in memory

39
00:02:30,680 --> 00:02:32,660
in the memory of your machine.

40
00:02:32,690 --> 00:02:39,170
So to see this disk folder we will have to build it for production and I will come back to this.

41
00:02:39,200 --> 00:02:41,100
So this is our index HMO file.

42
00:02:41,120 --> 00:02:46,960
The package truck chase and file here manage this all the dependencies as you can see that's the chase

43
00:02:47,000 --> 00:02:49,310
for production and then for development.

44
00:02:49,310 --> 00:02:57,290
It's the Web Pegg's server then some Bible related packages to be able to write iOS 6 code and some

45
00:02:57,290 --> 00:03:04,160
other trends Pilars and Lowder's especially the view loader here is important since this allows us to

46
00:03:04,460 --> 00:03:09,660
write to use to single file templates to which I'll come back in a second.

47
00:03:10,880 --> 00:03:15,100
Well now we got our Web page config file which is responsible for building everything.

48
00:03:15,330 --> 00:03:21,810
And while it's piling on record setting up our build process and knows how to handle their friend files

49
00:03:21,810 --> 00:03:28,530
for example that added the new file which will talk about in a second should be loaded with The View

50
00:03:28,680 --> 00:03:29,630
loader.

51
00:03:30,030 --> 00:03:31,790
So that's the general setup.

52
00:03:31,830 --> 00:03:37,220
Let's now dive into our resource folder and understand what is dot view fall.

53
00:03:37,230 --> 00:03:37,860
Here is.


1
00:00:01,770 --> 00:00:07,680
I created this simple starting application which you of course can find attached to this lecture.

2
00:00:07,710 --> 00:00:12,640
It has two buttons which allow me to increment and decrement account or here which is then output appear.

3
00:00:12,750 --> 00:00:15,580
And actually I do use two different components for this.

4
00:00:15,630 --> 00:00:22,380
The counter component which holds two buttons and each button basically just triggers a method called

5
00:00:22,380 --> 00:00:29,100
Where I emit the updated event and either add 1 or subtract 1 and then I have result whereas simply

6
00:00:29,100 --> 00:00:30,030
output the counter.

7
00:00:30,030 --> 00:00:37,290
I do get to Kountry as a prop here and right now all the state is stored in empty view where I do have

8
00:00:37,290 --> 00:00:38,990
counter as a property.

9
00:00:39,210 --> 00:00:41,600
And I update the counter here.

10
00:00:41,610 --> 00:00:46,810
When I received the updated event from the counter component there is nothing wrong with that setup

11
00:00:46,830 --> 00:00:53,970
and for such a simple app you should probably want to use that setup and not view X but X is easier

12
00:00:53,970 --> 00:00:58,980
to understand if we start applying it to a simple app before we then in the last much of this course

13
00:00:59,250 --> 00:01:01,720
we'll use it on a bigger application.

14
00:01:01,710 --> 00:01:05,720
So now let's work on this app and step by step.

15
00:01:05,720 --> 00:01:11,880
Introduce two different ideas of view x starting with a central state cell.

16
00:01:11,880 --> 00:01:20,190
The goal here is to get discounter out of is Aptos you file into a new file let's say into a new module

17
00:01:20,190 --> 00:01:24,180
of our application which holds this central state.

18
00:01:24,180 --> 00:01:32,130
Now typically you store all the view X-related parts or files in a separate folder which you name store

19
00:01:32,250 --> 00:01:38,270
it's on the same level as components though I will say right away at the end of this module you'll find

20
00:01:38,370 --> 00:01:43,290
an article with a fervor resources and be different set ups.

21
00:01:43,380 --> 00:01:47,300
So how else you could structure your files if you wanted to do that.

22
00:01:47,310 --> 00:01:51,930
But this is a common set up so let's use that in this store folder.

23
00:01:51,930 --> 00:01:53,680
I'll treat you for the store.

24
00:01:53,680 --> 00:01:55,180
Don't chase file.

25
00:01:55,230 --> 00:02:02,870
This is simple javascript file which should hold my store in order to be able to create such a store.

26
00:02:02,880 --> 00:02:06,330
We need some helpers from the view x package.

27
00:02:06,330 --> 00:02:13,080
So let's install it with NPM stole mine is mine a save and then viewer X does will pull down you X which

28
00:02:13,080 --> 00:02:17,450
is an extra package which gives us some additional tools to use here.

29
00:02:17,670 --> 00:02:23,930
Once it is finished in the store Cheerz file we want to import view from view.

30
00:02:24,270 --> 00:02:28,860
And we also want to import viewer X from viewer x.

31
00:02:29,010 --> 00:02:31,560
So these are the tools we'll need here.

32
00:02:32,130 --> 00:02:40,380
And then we can simply tell you to use viewer X to or just or does this plug in basically you right

33
00:02:40,390 --> 00:02:42,750
like with the router where we also did this.

34
00:02:42,780 --> 00:02:48,960
Now we enable this viewer X functionality in our view application view x basically is a package which

35
00:02:48,960 --> 00:02:53,740
gives us some additional tools to use here for this state management and so on.

36
00:02:54,120 --> 00:03:04,050
So now that we enabled you X we can create a new store by typing new view x store like this.

37
00:03:04,050 --> 00:03:08,180
Now store is a method where we pass an object will be configured at store.

38
00:03:08,520 --> 00:03:13,780
Now in that store what do we need that there what do we want to have in the store.

39
00:03:14,010 --> 00:03:18,070
Well S-D main task is to have the state of the application.

40
00:03:18,210 --> 00:03:22,610
We want to have a property named state here and this name is not arbitrary.

41
00:03:22,680 --> 00:03:25,820
It has to be named State for you x to detect it.

42
00:03:27,190 --> 00:03:33,780
There now is an object where we may store all the properties our application has.

43
00:03:33,820 --> 00:03:39,040
Like for example to counter and set it to zero initially that's the same value that you have here in

44
00:03:39,040 --> 00:03:40,690
the app on your file.

45
00:03:41,080 --> 00:03:44,720
So with that the counter is now in our central store.

46
00:03:45,070 --> 00:03:47,530
Later on we will add more things to that store for now.

47
00:03:47,540 --> 00:03:49,070
That's all I want though.

48
00:03:49,090 --> 00:03:52,330
I of course want to use that store outside of this fall too.

49
00:03:52,330 --> 00:03:59,600
So I need to export it and I will export a constant name store where I saved this new store in now to

50
00:03:59,630 --> 00:04:05,800
store export that I want to go to my main has fallen here registered in my root the instant so that

51
00:04:05,800 --> 00:04:10,570
I can really use it in my application because right now is having it sitting in that extra file doesn't

52
00:04:10,570 --> 00:04:11,140
do anything.

53
00:04:11,140 --> 00:04:12,490
I won't be able to use it.

54
00:04:13,280 --> 00:04:23,630
Their four year of first implored the store from my just created file in the store folders so from the

55
00:04:23,630 --> 00:04:27,940
store chains file they're like this.

56
00:04:28,360 --> 00:04:34,180
And now if store imported all I have to do is like with the router register it's here as a property

57
00:04:34,180 --> 00:04:35,370
on my view instance.

58
00:04:35,410 --> 00:04:42,900
So you could say store or store or since it's the same name just a short cut again where ESX will automatically

59
00:04:43,090 --> 00:04:46,600
well set up the ride key value pairs here since they have the same name.

60
00:04:46,630 --> 00:04:53,290
So with that the store is now added to my root view instance and therefore I have access to the store.

61
00:04:53,290 --> 00:04:55,580
Now how do I access it though.

62
00:04:56,170 --> 00:04:57,570
Well it's very simple.

63
00:04:57,850 --> 00:05:04,860
Let's first go to the counter where we have these buttons instead of emitting our event here.

64
00:05:04,870 --> 00:05:11,800
I can now access the store with dollar signs store dollar sign again signals that this is not a property

65
00:05:11,800 --> 00:05:12,490
we created.

66
00:05:12,490 --> 00:05:18,790
Instead it comes from UJA us on its own or in this case from a third party package so story gives us

67
00:05:18,850 --> 00:05:20,810
access to the central store.

68
00:05:21,160 --> 00:05:27,310
Well and there we can access our estate and we know what we have a counter there which I basically want

69
00:05:27,310 --> 00:05:30,600
to increment in this case and decrement.

70
00:05:30,610 --> 00:05:31,820
And the second case.

71
00:05:31,840 --> 00:05:35,310
So let's quickly do that with this.

72
00:05:35,310 --> 00:05:39,150
I'm changing the state in my store in the result a view file.

73
00:05:39,180 --> 00:05:43,020
I can get rid of my props and settle at a computed property here.

74
00:05:44,110 --> 00:05:53,320
Which old name counter to fit the name I put in my template and this shell then return this store state

75
00:05:53,410 --> 00:05:58,220
counter and whenever the counter there change is does shell change.

76
00:05:58,270 --> 00:06:00,390
Therefore this template is updated.

77
00:06:00,640 --> 00:06:06,670
Now this allows me to now in my Applet you file remove both the part where I pass the props as well

78
00:06:06,670 --> 00:06:09,510
as listening to the event and removed data down there.

79
00:06:09,500 --> 00:06:11,430
It didn't need that.

80
00:06:11,440 --> 00:06:16,500
And in store I recognized it should have a capital asset the beginning.

81
00:06:16,520 --> 00:06:18,700
So store like this.

82
00:06:18,700 --> 00:06:25,660
With that if we save this and go back to the application you now see it still works as before but it's

83
00:06:25,660 --> 00:06:26,600
improved.

84
00:06:26,650 --> 00:06:34,660
We now store the state in this central store it and hence don't need to take the route over our after

85
00:06:34,750 --> 00:06:35,330
you fall.

86
00:06:35,380 --> 00:06:41,440
Instead we can directly communicate with it with this Dolorosa and store it already is a lot better

87
00:06:41,650 --> 00:06:45,050
but still has some issues as well highlight in the next video.

88
00:06:45,160 --> 00:06:47,360
So we can still improve this solution.


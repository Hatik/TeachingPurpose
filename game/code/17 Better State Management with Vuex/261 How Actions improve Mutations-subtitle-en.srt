1
00:00:01,740 --> 00:00:06,390
The problem we want to PSALTIS that our mutations always have to run synchronously.

2
00:00:06,390 --> 00:00:09,540
So they have to change the state immediately.

3
00:00:09,570 --> 00:00:17,670
There must not be any asynchronous action or functional method going on while we can fix this by putting

4
00:00:17,710 --> 00:00:23,850
extra peace between our component but we want to trigger something and our mutation where we want to

5
00:00:23,850 --> 00:00:33,810
change to state this extra piece is an action action is basically extra function where we may run asynchronous

6
00:00:33,810 --> 00:00:41,070
tasks and it's in this action which we dispatch from the component or by the component where we then

7
00:00:41,190 --> 00:00:46,890
commit the mutation and we only commit the mutation once the asynchronous task is done.

8
00:00:46,980 --> 00:00:48,930
This has one major benefit.

9
00:00:49,080 --> 00:00:54,680
We may trigger action in our component we dispatch of there then we reach out to the server.

10
00:00:54,690 --> 00:00:58,950
It takes a couple of milliseconds or seconds and no change is committed.

11
00:00:58,950 --> 00:01:01,070
This state hasn't been changed yet.

12
00:01:01,170 --> 00:01:08,670
Only once this long taking asynchronous calculation or get are generally function is finished only at

13
00:01:08,670 --> 00:01:09,720
this point of time.

14
00:01:09,810 --> 00:01:16,110
Do we then commit the mutation so only then do we change the state in our story.

15
00:01:16,320 --> 00:01:23,880
So all the changes to our state still happen synchronously but with actions we are still able to execute

16
00:01:23,880 --> 00:01:27,550
some async code for making this change.

17
00:01:27,730 --> 00:01:30,350
Well let's see this in action in the next video.

